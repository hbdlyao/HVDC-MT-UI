///////////////////////////////////////////////////////////
//  CRwMvc.cs
//  Implementation of the Class CRwMvc
//  Generated by Enterprise Architect
//  Created on:      10-5ÔÂ-2017 9:23:38
//  Original author: open2
///////////////////////////////////////////////////////////


using Yao.BaseFrame.Device;
using Yao.BaseFrame.Func;

namespace Yao.BaseFrame.Rw
{
    public class CRwMvc
    {
        protected CRwAdo RwAdo;
        protected string dbfName;
        protected string SqlStr, SqlParam;

        public virtual void InitAdo(string vDbf)
        {
            dbfName = vDbf;

            if (RwAdo == null)
                RwAdo = new CRwAdo();

            RwAdo.InitDbf(dbfName, "", "", "false");

        }

        public virtual void OnLoad(string vdbf)
        {
            InitAdo(vdbf);

            OnLoad();
        }

        public virtual void OnSave(string vdbf)
        {
            InitAdo(vdbf);

            OnSave();
        }

        protected virtual void OnLoad()
        {
            using (RwAdo.OpenDBF())
            {
                doLoad();
                //
                RwAdo.CloseDBF();

            }//

        }

        protected virtual void OnSave()
        {
            using (RwAdo.OpenDBF())
            {
                //
                doSave();

                //
                RwAdo.CloseDBF();

            }// 

        }

        protected virtual void doLoad()
        {

        }

        protected virtual void doSave()
        {

        }


        public virtual void OnLoad(int vtblType)
        {
            using (RwAdo.OpenDBF())
            {
                doLoad(vtblType);
                //
                RwAdo.CloseDBF();

            }//

        }

        public virtual void OnSave(int vtblType)
        {
            using (RwAdo.OpenDBF())
            {
                //
                doSave(vtblType);

                //
                RwAdo.CloseDBF();

            }// 

        }

        protected virtual void doLoad(int vtblType)
        {
            CRwDbf vRw;
            vRw = doNewRw(vtblType);
            vRw.OnLoad();
        }

        protected virtual void doSave(int vtblType)
        {
            CRwDbf vRw;
            vRw = doNewRw(vtblType);
            vRw.OnSave();
        }


        public virtual void OnLoad(int vtblType, string vDeviceName)
        {
            using (RwAdo.OpenDBF())
            {
                doLoad(vtblType, vDeviceName);
                //
                RwAdo.CloseDBF();

            }//

        }

        public virtual void OnSave(int vtblType, CDevBase vDev)
        {
            using (RwAdo.OpenDBF())
            {
                //
                doSave(vtblType, vDev);

                //
                RwAdo.CloseDBF();

            }// 

        }

        protected virtual void doLoad(int vtblType, string vDeviceName)
        {
            CRwDev vRw;
            vRw = doNewRw(vtblType);
            vRw.OnLoad(vDeviceName);
        }

        protected virtual void doSave(int vtblType, CDevBase vDev)
        {
            CRwDev vRw;
            vRw = doNewRw(vtblType);
            vRw.OnSave(vDev);
        }


        /// ///////////////////////////////
        /// </summary>
        /// <param name="vtblType"></param>
        /// <returns></returns>
        protected virtual CRwDev doNewRw(int vtblType)
        {
            return null;
        }

        public static string GetString(string vX)
        {
            return CMyFunc.GetString(vX);
        }
        public static string GetString(int vX)
        {
            return CMyFunc.GetString(vX);
        }
        public static string GetString(double vX)
        {
            return CMyFunc.GetString(vX);
        }

    }//end CRwMvc
}//end namespace RwBase