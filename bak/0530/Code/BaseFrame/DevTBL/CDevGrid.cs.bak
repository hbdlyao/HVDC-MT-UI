///////////////////////////////////////////////////////////
//  CDevGrid.cs
//  Implementation of the Class CDevGrid
//  Generated by Enterprise Architect
//  Created on:      09-5ÔÂ-2017 17:08:07
//  Original author: open2
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using System.Data;
using Yao.BaseFrame.Device;

namespace Yao.BaseFrame.DevTBL
{
    public class CDevGrid : CDevTBL
    {
        //public DataSet daSet;

        protected Dictionary<int, CDevTBL> pItems;

        public CDevGrid()
        {
            pItems = new Dictionary<int, CDevTBL>();
        }

        /// 
        /// <param name="vType"></param>
        public virtual CDevTBL NewDeviceTBL(int vType)
        {
            return null;
        }

        public override CDevBase NewDevice(int vType)
        {
            return DeviceTBL(vType).NewDevice(vType);
        }
        
        /// 
        /// <param name="vType"></param>
        public CDevTBL DeviceTBL(int vType)
        {
            return pItems[vType];
        }

        public CDevBase Device(int vType,string vDeviceName)
        {
            return DeviceTBL(vType).Device(vDeviceName);
        }

        public CDevBase Device(int vType,int vIndex)
        {
            return DeviceTBL(vType).Device(vIndex);
        }

        public virtual void DeviceAdd(int vType,CDevBase vItem)
        {
            DeviceTBL(vType).Add(vItem);
        }

        public virtual void DeviceRemove(int vType, CDevBase vItem)
        {
            DeviceTBL(vType).Remove(vItem);
        }

    }//end CDevGrid

}//end namespace DevTBL