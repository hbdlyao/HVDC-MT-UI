///////////////////////////////////////////////////////////
//  CmcRw.cs
//  Implementation of the class CmcRw
//  Generated by Enterprise Architect
//  Created on:      09-5月-2017 8:08:04
//  Original author: open2
///////////////////////////////////////////////////////////

using Yao.BaseFrame.dataRw;
using Yao.BaseFrame.DevTBL;

using Hvdc.MT.mc.Device;
using Hvdc.MT.mc.DevTBL;
using Yao.BaseFrame.Func;
using System.Data;
using Yao.BaseFrame.Device;

namespace Hvdc.MT.mc.dataRw
{
    /// <summary>
    /// 主回路计算读写
    /// </summary>
    public class CmcDataRwAcSys : CmcDataRwOne
    {
        /// 
        /// <param name="vDevice"></param>
        protected override void doLoad(CDevBase vDevice)
        {
            CmcDevAcSys vDev;
            vDev = (CmcDevAcSys)vDevice;

            base.doLoad(vDevice);

            vDev.QfMinN = RwAdo.ReadDouble("QfMinN");
            vDev.QfMaxN = RwAdo.ReadDouble("QfMaxN");

            vDev.QinMax = RwAdo.ReadDouble("QinMax");
            vDev.QoutMax = RwAdo.ReadDouble("QoutMax");

            vDev.UacExMin = RwAdo.ReadDouble("UacExMin");
            vDev.UacMax = RwAdo.ReadDouble("UacMax");
            vDev.UacMin = RwAdo.ReadDouble("UacMin");
            vDev.UacN = RwAdo.ReadDouble("UacN");

        }

        /// 
        /// <param name="vDevice"></param>
        protected override void doSave(CDevBase vDevice)
        {
            CmcDevAcSys vDev;
            vDev = (CmcDevAcSys)vDevice;

            base.doSave(vDevice);

            RwAdo.SaveField("QfMinN",vDev.QfMinN );
            RwAdo.SaveField("QfMaxN", vDev.QfMaxN);

            RwAdo.SaveField("QinMax" , vDev.QinMax);
            RwAdo.SaveField("QoutMax", vDev.QoutMax);

            RwAdo.SaveField("QfMinN", vDev.QfMinN);
            RwAdo.SaveField("QfMaxN", vDev.QfMaxN);

            RwAdo.SaveField("UacExMin", vDev.UacExMin);
            RwAdo.SaveField("UacMax"  , vDev.UacMax);
            RwAdo.SaveField("UacMin"  , vDev.UacMin);
            RwAdo.SaveField("UacN"    , vDev.UacN);         

        }

    }//end CmcRw

}//end namespace mc