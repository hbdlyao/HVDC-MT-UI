<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>