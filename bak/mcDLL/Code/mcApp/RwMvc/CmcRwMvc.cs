///////////////////////////////////////////////////////////
//  CmcRwMvc.cs
//  Implementation of the class CmcRwMvc
//  Generated by Enterprise Architect
//  Created on:      09-5月-2017 8:08:05
//  Original author: open2
///////////////////////////////////////////////////////////

using Yao.BaseFrame.Rw;

using Hvdc.MT.mc.Def;

using Hvdc.MT.mc.DevTBL;
using Yao.BaseFrame.Device;
using Hvdc.MT.mc.Rw;

namespace Hvdc.MT.mc.RwMvc
{
    public class CmcRwMvc : CRwMvcAccess
    {
        private CmcHvdcGrid pGrid;
        
        /// 
        /// <param name="vHvdc"></param>
        public void InitGrid(CmcHvdcGrid vGrid)
        {
            pGrid = vGrid;
        }

        protected override void doLoad()
        {
            CRwDev vRw;
            int i1, i2;

            i1 = CmcDef.mc_AcSys;
            i2 = CmcDef.mc_Ground;

            for (int i = i1; i <= i2; i++)
            {
                vRw = doNewRw(i);
                vRw.OnLoad();
            }                      
        }

        protected override void doSave()
        {
            CRwDev vRw;
            int i1, i2;

            i1 = CmcDef.mc_AcSys;
            i2 = CmcDef.mc_Ground;

            for (int i = i1; i <= i2; i++)
            {
                vRw = doNewRw(i);
                vRw.OnSave();
            }
        }

        protected override CRwDev doNewRw(int vtblType)
        {
            CRwDev vRw;

            switch (vtblType)
            {
                case CmcDef.mc_AcSys:
                    //交流系统  
                    vRw = new CmcRwAcSys();

                    vRw.InitAdo(RwAdo);
                    vRw.InitTable("mcAcSystem");
                    vRw.InitType(CmcDef.mc_AcSys, CmcDef.mc_AcSys);
                    vRw.InitGrid(pGrid);

                    break;

                case CmcDef.mc_AcF:
                    //交流滤波器
                    vRw = new CmcRwAcfilter();

                    vRw.InitAdo(RwAdo);
                    vRw.InitTable("mcAcFilter");
                    vRw.InitType(CmcDef.mc_AcF, CmcDef.mc_AcF);
                    vRw.InitGrid(pGrid);

                    break;

                case CmcDef.mc_Xf2:
                    //双绕组变压器  
                    vRw = new CmcRwXf2();

                    vRw.InitAdo(RwAdo);
                    vRw.InitTable("mcTransformer");
                    vRw.InitType(CmcDef.mc_Xf2, CmcDef.mc_Xf2);
                    vRw.InitGrid(pGrid);

                    break;

                case CmcDef.mc_Convertor:
                    //换流器  
                    vRw = new CmcRwConvertor();

                    vRw.InitAdo(RwAdo);
                    vRw.InitTable("mcConvertor");
                    vRw.InitType(CmcDef.mc_Convertor, CmcDef.mc_Convertor);
                    vRw.InitGrid(pGrid);

                    break;

                case CmcDef.mc_DcLine:
                    //直流极线  
                    vRw = new CmcRwDcLine();

                    vRw.InitAdo(RwAdo);
                    vRw.InitTable("mcDcLine");
                    vRw.InitType(CmcDef.mc_DcLine, CmcDef.mc_DcLine);
                    vRw.InitGrid(pGrid);

                    break;

                case CmcDef.mc_MetalLine:
                    //接地极线  
                    vRw = new CmcRwMetalLine();

                    vRw.InitAdo(RwAdo);
                    vRw.InitTable("mcMetalLine");
                    vRw.InitType(CmcDef.mc_MetalLine, CmcDef.mc_MetalLine);
                    vRw.InitGrid(pGrid);

                    break;

                case CmcDef.mc_GroundLine:
                    //金属回线  
                    vRw = new CmcRwGroundLine();

                    vRw.InitAdo(RwAdo);
                    vRw.InitTable("mcGroundLine");
                    vRw.InitType(CmcDef.mc_GroundLine, CmcDef.mc_GroundLine);
                    vRw.InitGrid(pGrid);

                    break;

                case CmcDef.mc_Ground:
                    //接地极  
                    vRw = new CmcRwGround();

                    vRw.InitAdo(RwAdo);
                    vRw.InitTable("mcGround");
                    vRw.InitType(CmcDef.mc_Ground, CmcDef.mc_Ground);
                    vRw.InitGrid(pGrid);

                    break;

                default:
                    vRw = null;
                    break;

            }

            return vRw;

        }      


    }//end CmcRwMvc

}//end namespace mc
