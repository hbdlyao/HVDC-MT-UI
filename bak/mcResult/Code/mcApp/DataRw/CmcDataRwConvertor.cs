///////////////////////////////////////////////////////////
//  CmcRwConvertor.cs
//  Implementation of the class CmcRwConvertor
//  Generated by Enterprise Architect
//  Created on:      09-5ÔÂ-2017 8:08:04
//  Original author: open2
///////////////////////////////////////////////////////////


using Hvdc.MT.mc.dataRw;
using Hvdc.MT.mc.Device;
using Yao.BaseFrame.Device;
using Yao.BaseFrame.Func;

namespace Hvdc.MT.mc.Rw
{
    public class CmcDataRwConvertor : CmcDataRwTwo
    {
        protected override void doLoad(CDevBase vDevice)
        {
            CmcDevConvertor vDev;
            vDev = (CmcDevConvertor)vDevice;

            base.doLoad(vDevice);

            vDev.Valvor12Count = RwAdo.ReadInt32("Valvor12Count") ;

            vDev.PconvN = RwAdo.ReadDouble("PconvN") ;
            vDev.QconvN = RwAdo.ReadDouble("QconvN") ;

            vDev.miuN = RwAdo.ReadDouble("miuN") ;
            vDev.Alpha_gamaN = RwAdo.ReadDouble("Alpha_gamaN") ;

            vDev.AngleMax = RwAdo.ReadDouble("AngleMax") ;
            vDev.AngleMin = RwAdo.ReadDouble("AngleMin") ;

            vDev.PdN = RwAdo.ReadDouble("PdN") ;
            vDev.UdN = RwAdo.ReadDouble("UdN") ;
            vDev.IdN = RwAdo.ReadDouble("IdN") ;

            vDev.UT = RwAdo.ReadDouble("UT") ;
            vDev.UdioN = RwAdo.ReadDouble("UdioN") ;
            vDev.UvN = RwAdo.ReadDouble("UvN") ;

            vDev.StationType = RwAdo.ReadInt32("StationType") ;
            vDev.StationCtrlType = RwAdo.ReadInt32("StationCtrlType") ;
            vDev.StationCtrlTypeN = RwAdo.ReadInt32("StationCtrlTypeN") ;

            vDev.IsGround = RwAdo.ReadInt32("IsGround") ;

            vDev.AngleRef = RwAdo.ReadDouble("AngleRef") ;
            vDev.MeasureStation =RwAdo.ReadString("MeasureStation");

        }

        /// 
        /// <param name="vDevice"></param>
        protected override void doSave(CDevBase vDevice)
        {
            CmcDevConvertor vDev;
            vDev = (CmcDevConvertor)vDevice;

            base.doSave(vDevice);

            RwAdo.SaveField("Valvor12Count", vDev.Valvor12Count);

            RwAdo.SaveField("PconvN", vDev.PconvN);
            RwAdo.SaveField("QconvN", vDev.QconvN);

            RwAdo.SaveField("miuN", vDev.miuN);
            RwAdo.SaveField("Alpha_gamaN", vDev.Alpha_gamaN);

            RwAdo.SaveField("AngleMax", vDev.AngleMax);
            RwAdo.SaveField("AngleMin", vDev.AngleMin);

            RwAdo.SaveField("PdN", vDev.PdN);
            RwAdo.SaveField("UdN", vDev.UdN);
            RwAdo.SaveField("IdN", vDev.IdN);

            RwAdo.SaveField("UT", vDev.UT);
            RwAdo.SaveField("UdioN", vDev.UdioN);
            RwAdo.SaveField("UvN", vDev.UvN);

            RwAdo.SaveField("StationType", vDev.StationType);
            RwAdo.SaveField("StationCtrlType", vDev.StationCtrlType);
            RwAdo.SaveField("StationCtrlTypeN", vDev.StationCtrlTypeN);

            RwAdo.SaveField("IsGround", vDev.IsGround);
            RwAdo.SaveField("AngleRef", vDev.AngleRef);
            RwAdo.SaveField("MeasureStation", vDev.MeasureStation);

        }

    }//end CmcRwConvertor

}//end namespace mc