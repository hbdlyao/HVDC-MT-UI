///////////////////////////////////////////////////////////
//  CmcHvdcGrid.cs
//  Implementation of the Class CmcHvdcGrid
//  Generated by Enterprise Architect
//  Created on:      09-5ÔÂ-2017 17:08:09
//  Original author: open2
///////////////////////////////////////////////////////////


using Yao.BaseFrame.DevTBL;

using Hvdc.MT.mc.Def;
using Hvdc.MT.mc.Func;
using System.Collections.Generic;
using Yao.BaseFrame.Device;

namespace Hvdc.MT.mc.DevTBL
{
    public class CmcHvdcGrid : CDevGrid
    {
        public override void Init()
        {
            int i1, i2;

            i1 = CmcDef.mc_AcSys;
            i2 = CmcDef.mc_Ground;

            for (int i = i1; i <= i2; i++)
                NewDevTBL(i);
        }

        /// <summary>
        /// @param ="vType"
        /// </summary>
        /// <param name="vDevType"></param>
        public override string TypeToName(int vDevType)
        {

            return CmcFunc.mcTypeToName(vDevType);
        }

        /// 
        /// <param name="vType"></param>
        public override CDevTBL NewDevTBL(int vType)
        {

            string vName;
            CDevTBL vTBL;

            vName = TypeToName(vType);

            //
            vTBL = new CmcDevTBL();

            vTBL.tblName = vName;
            vTBL.tblType = vType;

            //
            Add(vTBL);

            //
            pTables[vType] = vTBL;

            return vTBL;
        }

        protected override CDevStation doNewStation()
        {

            return new CmcDevStation();
        }


        //´Þ¿µÉú20170528-NewGrid
        public void NewGrid(List<string> vStations)
        {
            //´Þ¿µÉú
            foreach (string vStaName in vStations)
            {
                NewAcFilterTBL(vStaName);

                NewAcSysTBL(vStaName);

                NewXf2TBL(vStaName);

                NewConvertorTBL(vStaName);
                
                NewGroundLineTBL(vStaName);
                
                NewGroundTBL(vStaName);
            }

            AddToStation();
        }

        public void NewAcFilterTBL(string vStaName)
        {
            CDevTBL vTBL;
            CDevBase vDev;
            int vType;
            string vDevName;
            //string vNodeName;

            vType = CmcDef.mc_AcF;
            vDevName = vStaName + "---ACF";
            //vNodeName = vStaName + "---" + mcNodeNameACF[0];

            vTBL = DeviceTBL(vType);
            vDev = vTBL.NewDevice(vType);
            vDev.Init();

            vDev.StationNames[0] = vStaName;

            vDev.DeviceID = vDevName;
            vDev.DeviceName = vDevName;
            vDev.DeviceType = vType;

            //vDev->SetNodeName(0,vNodeName);

            vTBL.DeviceAdd(vDev);
        }

        public void NewAcSysTBL(string vStaName)
        {
            CDevTBL vTBL;
            CDevBase vDev;
            int vType;
            string vDevName;
            //string vNodeName;

            vType = CmcDef.mc_AcSys;
            vDevName = vStaName + "---AcSys";
            //vNodeName = vStaName + "---" + mcNodeNameACSys[0];

            vTBL = DeviceTBL(vType);
            vDev = vTBL.NewDevice(vType);
            vDev.Init();

            vDev.StationNames[0] = vStaName;

            vDev.DeviceID = vDevName;
            vDev.DeviceName = vDevName;
            vDev.DeviceType = vType;

            //vDev->SetNodeName(0,vNodeName);

            vTBL.DeviceAdd(vDev);
        }

        public void NewConvertorTBL(string vStaName)
        {
            CDevTBL vTBL;
            CDevBase vDev;
            int vType;
            string vDevName;
            string vNodeName1;
            string vNodeName2;

            vType = CmcDef.mc_Convertor;
            vDevName = vStaName + "---Convertor";
            vNodeName1 = vStaName + "---" + mcNodeName.mcNodeNameConvertor[0];
            vNodeName2 = vStaName + "---" + mcNodeName.mcNodeNameConvertor[1];

            vTBL = DeviceTBL(vType);
            vDev = vTBL.NewDevice(vType);
            vDev.Init();

            vDev.StationNames[0] = vStaName;

            vDev.DeviceID = vDevName;
            vDev.DeviceName = vDevName;
            vDev.DeviceType = vType;

            vDev.NodeNames[0] = vNodeName1;
            vDev.NodeNames[1] = vNodeName2;

            vTBL.DeviceAdd(vDev);
        }

        public void NewXf2TBL(string vStaName)
        {
            CDevTBL vTBL;
            CDevBase vDev;
            int vType;
            string vDevName;
            //string vNodeName;

            vType = CmcDef.mc_Xf2;
            vDevName = vStaName + "---Xf2";
            //vNodeName = vStaName + "---" + mcNodeNameACF[0];

            vTBL = DeviceTBL(vType);
            vDev = vTBL.NewDevice(vType);
            vDev.Init();

            vDev.StationNames[0] = vStaName;

            vDev.DeviceID = vDevName;
            vDev.DeviceName = vDevName;
            vDev.DeviceType = vType;

            //vDev->SetNodeName(0,vNodeName);

            vTBL.DeviceAdd(vDev);
        }
        
        void NewGroundLineTBL(string vStaName)
        {
            CDevTBL vTBL;
            CDevBase vDev;
            int vType;
            string vDevName;
            string vNodeName;

            vType = CmcDef.mc_GroundLine;
            vDevName = vStaName + "---GroundLine";
            vNodeName = vStaName + "---" + mcNodeName.mcNodeNameGroundLine[0];

            vTBL = DeviceTBL(vType);
            vDev = vTBL.NewDevice(vType);
            vDev.Init();

            vDev.StationNames[0]=vStaName;

            vDev.DeviceID=(vDevName);
            vDev.DeviceName=(vDevName);
            vDev.DeviceType=(vType);

            vDev.NodeNames[0]=vNodeName;

            vTBL.DeviceAdd(vDev);
        }
        
        void NewGroundTBL(string vStaName)
        {
            CDevTBL vTBL;
            CDevBase vDev;
            int vType;
            string vDevName;
            string vNodeName;

            vType = CmcDef.mc_Ground;
            vDevName = vStaName + "---Ground";
            vNodeName = vStaName + "---" + mcNodeName.mcNodeNameGround[0];

            vTBL = DeviceTBL(vType);
            vDev = vTBL.NewDevice(vType);
            vDev.Init();

            vDev.StationNames[0]=vStaName;

            vDev.DeviceID=vDevName;
            vDev.DeviceName=vDevName;
            vDev.DeviceType=vType;

            vDev.NodeNames[0]=vNodeName;

            vTBL.DeviceAdd( vDev);
        }

    }//end CmcHvdcGrid

}//end namespace DevTBL