///////////////////////////////////////////////////////////
//  CxbRwDCF.cs
//  Implementation of the Class CxbRwDCF
//  Generated by Enterprise Architect
//  Created on:      09-5ÔÂ-2017 8:08:06
//  Original author: open2
///////////////////////////////////////////////////////////

using Hvdc.MT.xb.Device;
using Yao.BaseFrame.Device;
using Yao.BaseFrame.Func;

namespace Hvdc.MT.xb.Rw
{
    public class CxbRwDCF : CxbRw_Tree
    {
        protected override void doLoad(CDevBase  vRoot)
        {
            CxbDevDCF  vDev;

            vDev = (CxbDevDCF)(vRoot);
            //
            base.doLoad(vRoot);

            //
            vDev.DCFType =RwAdo.ReadInt32("DcfType");

            vDev.MaxFreqDelta = RwAdo.ReadDouble("MaxFreqDelta");
            vDev.MinFreqDelta = RwAdo.ReadDouble("MinFreqDelta");

        }

		protected override void doSave(CDevBase  vRoot)
        {
            CxbDevDCF  vDev;

            vDev = (CxbDevDCF)(vRoot);
            //
            base.doSave(vDev);

            SqlStr = SqlStr + ", ";
            SqlParam = SqlParam + " , ";

			SqlStr = SqlStr + "DcfType, ";
            SqlParam = SqlParam + GetString(vDev.DCFType) + " , ";

            SqlStr = SqlStr + "MaxFreqDelta, ";
            SqlParam = SqlParam + GetString(vDev.MaxFreqDelta) + " , ";

            SqlStr = SqlStr + "MinFreqDelta ";
            SqlParam = SqlParam + GetString(vDev.MinFreqDelta);


        }

        protected override void doLoad_Leaf_Data(CxbDevBase  vLeaf)
        {
            CxbDevDCF_RLC vDev;

            vDev = (CxbDevDCF_RLC)(vLeaf);
            //
            base.doLoad_Leaf_Data(vDev);

            vDev.Zr = RwAdo.ReadDouble("Zr");
            vDev.Z_L = RwAdo.ReadDouble("Z_L");
            vDev.Z_C = RwAdo.ReadDouble("Z_C");
            vDev.Zx_L = RwAdo.ReadDouble("Zx_L");
            vDev.Zx_C = RwAdo.ReadDouble("Zx_C");

            vDev.MaxRDelta = RwAdo.ReadDouble("MaxRDelta");
            vDev.MinRDelta = RwAdo.ReadDouble("MinRDelta");

            vDev.MaxLDelta = RwAdo.ReadDouble("MaxLDelta");
            vDev.MinLDelta = RwAdo.ReadDouble("MinLDelta");

            vDev.MaxCDelta = RwAdo.ReadDouble("MaxCDelta");
            vDev.MinCDelta = RwAdo.ReadDouble("MinCDelta");

        }

        protected override void doSave_Leaf_Data(CxbDevBase vLeaf)
        {
            CxbDevDCF_RLC vDev;

            vDev = (CxbDevDCF_RLC)vLeaf;

            base.doSave_Leaf_Data(vLeaf);

            SqlStr = SqlStr + ", ";
            SqlParam = SqlParam + " , ";

            SqlStr = SqlStr + "Zr, ";
            SqlParam = SqlParam + GetString(vDev.Zr) + " , ";

            SqlStr = SqlStr + "Z_L, ";
            SqlParam = SqlParam + GetString(vDev.Z_L) + " , ";

            SqlStr = SqlStr + "Z_C, ";
            SqlParam = SqlParam + GetString(vDev.Z_C) + " , ";

            SqlStr = SqlStr + "Zx_L, ";
            SqlParam = SqlParam + GetString(vDev.Zx_L) + " , ";

            SqlStr = SqlStr + "Zx_C, ";
            SqlParam = SqlParam + GetString(vDev.Zx_C) + " , ";

            SqlStr = SqlStr + "MaxRDelta, ";
            SqlParam = SqlParam + GetString(vDev.MaxRDelta) + " , ";

            SqlStr = SqlStr + "MinRDelta, ";
            SqlParam = SqlParam + GetString(vDev.MinRDelta) + " , ";

            SqlStr = SqlStr + "MaxLDelta, ";
            SqlParam = SqlParam + GetString(vDev.MaxLDelta) + " , ";

            SqlStr = SqlStr + "MinLDelta, ";
            SqlParam = SqlParam + GetString(vDev.MinLDelta) + " , ";

            SqlStr = SqlStr + "MaxCDelta, ";
            SqlParam = SqlParam + GetString(vDev.MaxCDelta) + " , ";

            SqlStr = SqlStr + "MinCDelta ";
            SqlParam = SqlParam + GetString(vDev.MinCDelta);

        }

    }//end CxbRwDCF

}//end namespace xb