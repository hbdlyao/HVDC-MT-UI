<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAKAAoAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABxAJ0DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2TVZ9Yhdf7MtLW4yTv+0XLQ7fTGFbPf0qh9u8Wf8AQJ0r/wAG
        cn/xmt9/vt9abQBhfbvFn/QJ0r/wZyf/ABmj7d4s/wCgTpX/AIM5P/jNbtFAGF9u8Wf9AnSv/BnJ/wDG
        aPt3iz/oE6V/4M5P/jNbtFAGF9u8Wf8AQJ0r/wAGcn/xmj7d4s/6BOlf+DOT/wCM1u0UAYX27xZ/0CdK
        /wDBnJ/8ZqrqGu+KNNsZLufR9NaOPGQupvnkgf8APH3rpWZUUsxCqoySegFcn4o8SaFceHLqOHWdPkkb
        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
        ACiiigAooooAKKKKAP/Z
</value>
  </data>
</root>